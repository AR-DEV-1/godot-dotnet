<Project>

  <!--
    This file sets properties that enable skipping of a project build if desired.
    Cases where we might skip include:
    - "ExcludeFromBuild" is set
    - Product build and "ExcludeFromProductBuild" is set.

    To exclude a project from building, we must do two things:
    - Create/override the standard targets (Build, Restore, etc.) with empty ones.
    - Keep the .NET SDK from importing the standard NuGet restore targets - NuGet uses the
      '_IsProjectRestoreSupported target' to determine whether a project can be restored. If the project
      shouldn't be built, it shouldn't be restored either. This could be done two ways:
        - Override the _IsProjectRestoreSupported target to an empty target, or one that returns false.
        - Avoid import of the _IsProjectRestoreSupported target altogether.
      The first approach is more consistent with the rest of the build infra's approach to skipping a build.
      However is does **not** work with msbuild static graph. Static graph uses the *existence* of the
      target to determine whether a project should be restored, so overriding with an empty target will
      only avoid building a project, but it will still get restored. This could cause issues with target
      framework filtering, or introduce unexpected prebuilts.

      So to achieve the desired affect, we must reset NuGetRestoreTargets to an empty file. Because
      this import is done early, the BeforeCommonTargets hook must be used.
  -->

  <!-- Exclude test projects from product builds by default. -->
  <PropertyGroup Condition="'$(IsTestProject)' == 'true'">
    <ExcludeFromProductBuild Condition="'$(ExcludeFromProductBuild)' == ''">true</ExcludeFromProductBuild>
  </PropertyGroup>

  <!--
    Calculate the value of the target suppress flag. It should be true when:
    - Building from source only and the project is excluded from source-only builds
    - The project is explicitly excluded.

    It's also possible to set ExcludeFromBuild prior to importing the Main.targets
    to skip building as desired in non-source build scenarios. This might be done to
    avoid building tests in certain product build scenarios.
  -->
  <PropertyGroup>
    <_SuppressAllTargets>false</_SuppressAllTargets>
    <!-- Product build switch -->
    <_SuppressAllTargets Condition="'$(ProductBuild)' == 'true' and '$(ExcludeFromProductBuild)' == 'true'">true</_SuppressAllTargets>
    <!-- General exclusion -->
    <_SuppressAllTargets Condition="'$(ExcludeFromBuild)' == 'true'">true</_SuppressAllTargets>

    <!--
      If excluding, then disable a restore warning, which will fire on newer SDKs, as well as set the
      NuGetRestoreTargets property to empty, which will avoid importing the restore targets inside the
      .NET SDK. If the restore targets exist, then static graph restore will attempt to execute.
    -->
    <DisableWarnForInvalidRestoreProjects Condition="'$(_SuppressAllTargets)' == 'true'">true</DisableWarnForInvalidRestoreProjects>
    <NuGetRestoreTargets Condition="'$(_SuppressAllTargets)' == 'true'">$(MSBuildThisFileDirectory)NoRestore.targets</NuGetRestoreTargets>
  </PropertyGroup>

</Project>
