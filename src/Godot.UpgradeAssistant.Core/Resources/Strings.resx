<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
  Microsoft ResX Schema

  Version 2.0

  The primary goals of this format is to allow a simple XML format
  that is mostly human readable. The generation and parsing of the
  various data types are done through the TypeConverter classes
  associated with the data types.

  Example:

  ... ado.net/XML headers & schema ...
  <resheader name="resmimetype">text/microsoft-resx</resheader>
  <resheader name="version">2.0</resheader>
  <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
  <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
  <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
  <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
  <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>[base64 mime encoded serialized .NET Framework object]</value>
  </data>
  <data name="Icon1" type="System.Drawing.Icon, System.Drawing"
  mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>[base64 mime encoded string representing a byte array form of the .NET Framework
  object]</value>
    <comment>This is a comment</comment>
  </data>

  There are any number of "resheader" rows that contain simple
  name/value pairs.

  Each data row contains a name, and value. The row also contains a
  type or mimetype. Type corresponds to a .NET class that support
  text/value conversion through the TypeConverter architecture.
  Classes that don't support this are serialized and stored with the
  mimetype set.

  The mimetype is used for serialized objects, and tells the
  ResXResourceReader how to depersist the object. This is currently not
  extensible. For a given mimetype the value must be set accordingly:

  Note - application/x-microsoft.net.object.binary.base64 is the format
  that the ResXResourceWriter will generate, however the reader can
  read any of the formats listed below.

  mimetype: application/x-microsoft.net.object.binary.base64
  value   : The object must be serialized with
      : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
      : and then encoded with base64 encoding.

  mimetype: application/x-microsoft.net.object.soap.base64
  value   : The object must be serialized with
      : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
      : and then encoded with base64 encoding.

  mimetype: application/x-microsoft.net.object.bytearray.base64
  value   : The object must be serialized into a byte array
      : using a System.ComponentModel.TypeConverter
      : and then encoded with base64 encoding.
  -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"
                  msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0"
                  msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"
                msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"
                  msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Argument_AnalysisResultAlreadyFixed" xml:space="preserve">
    <value>Analysis result has already been fixed.</value>
  </data>
  <data name="Argument_UpgradeActionMustFixAtLeastOneAnalysisResult" xml:space="preserve">
    <value>Reported upgrade action must fix at least one analysis result.</value>
  </data>
  <data name="Argument_UpgradeFixDoesNotSupportMerging" xml:space="preserve">
    <value>Upgrade fix does not support merging and can't be applied in bulk.</value>
  </data>
  <data name="Format_InvalidStringWithSemVer" xml:space="preserve">
    <value>The input string '{input}' was not in a correct format.</value>
  </data>
  <data name="InvalidOperation_DotNetSolutionModelUpgradeActionCannotBeAppliedWithoutSolutionSerializer" xml:space="preserve">
    <value>DotNetSolutionModelUpgradeAction cannot be applied without a .NET solution serializer. If the serializer cannot be retrieved from the solution moniker, specify the serializer to use when creating these type of UpgradeActions.</value>
  </data>
  <data name="InvalidOperation_DotNetWorkspaceUpgradeActionCannotBeAppliedWithoutWorkspace" xml:space="preserve">
    <value>DotNetWorkspaceUpgradeAction cannot be applied without a .NET workspace. Avoid creating these type of UpgradeActions for Godot projects that don't contain a .NET workspace.</value>
  </data>
  <data name="InvalidOperation_GlobalJsonFileNotAvailable" xml:space="preserve">
    <value>Could not locate a 'global.json' file from the Godot working directory.</value>
  </data>
  <data name="InvalidOperation_GodotDotNetPreviewIsOutOfPreviewInTargetGodotVersion" xml:space="preserve">
    <value>Can't enable Godot .NET preview, the target Godot version {targetGodotVersion} only supports the Godot .NET bindings and it's no longer a preview.</value>
  </data>
  <data name="InvalidOperation_GodotDotNetPreviewUnsupportedInTargetGodotVersion" xml:space="preserve">
    <value>Can't enable Godot .NET preview, the target Godot version {targetGodotVersion} doesn't support the Godot .NET bindings.</value>
  </data>
  <data name="InvalidOperation_InvalidTargetGodotVersion" xml:space="preserve">
    <value>Invalid target Godot version {targetGodotVersion}. Must target at least {minimumSupportedGodotVersion}.</value>
  </data>
  <data name="InvalidOperation_MSBuildSdkNotSupported" xml:space="preserve">
    <value>Invalid or unsupported C# project. Expected a C# project that uses 'Godot.NET.Sdk' but found '{sdk}'.</value>
  </data>
  <data name="InvalidOperation_RestorePackagesStepCannotRunWithoutWorkspace" xml:space="preserve">
    <value>Restore Packages step cannot run without a .NET workspace.</value>
  </data>
  <data name="InvalidOperation_RestorePackagesStepHasntExecuted" xml:space="preserve">
    <value>Restore Packages step hasn't been executed.</value>
  </data>
  <data name="InvalidOperation_SolutionNotFound" xml:space="preserve">
    <value>Solution file not found.</value>
  </data>
  <data name="InvalidOperation_SolutionSerializerNotAvailableForMoniker" xml:space="preserve">
    <value>Could not retrieve a supported solution serializer for moniker '{solutionMoniker}'.</value>
  </data>
</root>
