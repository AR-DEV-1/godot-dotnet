<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <IsTrimmable>true</IsTrimmable>
    <IsAotCompatible>true</IsAotCompatible>
    <EnableTrimAnalyzer>true</EnableTrimAnalyzer>
    <EnableSingleFileAnalyzer>true</EnableSingleFileAnalyzer>
    <EnableAotAnalyzer>true</EnableAotAnalyzer>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <EnablePackageValidation>true</EnablePackageValidation>
  </PropertyGroup>

  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <Description>.NET bindings for the Godot game engine.</Description>
  </PropertyGroup>

  <!-- TODO: This should be uncommented to make it true by default, but make sure the task is incremental first. -->
  <!-- <PropertyGroup>
    <GenerateGodotBindings>true</GenerateGodotBindings>
  </PropertyGroup> -->

  <ItemGroup>
    <InternalsVisibleTo Include="Godot.EditorIntegration" />
    <InternalsVisibleTo Include="Godot.Bindings.Tests" />
  </ItemGroup>

  <!-- Reference the project that contains the MSBuild task to ensure the build order is correct. -->
  <ItemGroup>
    <ProjectReference Include="..\Godot.BindingsGenerator\Godot.BindingsGenerator.csproj" ReferenceOutputAssembly="false" />
  </ItemGroup>

  <!--
    TaskHostFactory ensures that the GenerateTasks assembly is always loaded in an isolated process.
    This avoids issues when the MSBuild process is long-lived (i.e. /nodeReuse:true).
    See https://github.com/rainersigwald/build-task-in-solution-demo.
  -->
  <UsingTask TaskName="Godot.BindingsGenerator.GenerateTask" AssemblyFile="$(ArtifactsBinDir)\Godot.BindingsGenerator\$(Configuration)\net9.0\Godot.BindingsGenerator.dll" TaskFactory="TaskHostFactory" />

  <!-- Generate the bindings before building the project. -->
  <ItemGroup Condition="'$(GenerateGodotBindings)' == 'true'">
    <Compile Remove="$(MSBuildThisFileDirectory)Generated\**\*.cs" />
  </ItemGroup>
  <Target Name="GenerateGodotBindings" Condition="'$(GenerateGodotBindings)' == 'true'" BeforeTargets="BeforeCompile">
    <GenerateTask ExtensionApiPath="$(RepoRoot)gdextension\extension_api.json"
                  ExtensionInterfacePath="$(RepoRoot)gdextension\gdextension_interface.h"
                  OutputPath="$(MSBuildThisFileDirectory)Generated"
                  TestOutputPath="$(RepoRoot)tests\Godot.Bindings.Tests\Generated" />
    <ItemGroup>
      <Compile Include="$(MSBuildThisFileDirectory)Generated\**\*.cs" />
    </ItemGroup>
  </Target>

  <ItemGroup>
    <EmbeddedResource Update="Resources\Strings.resx">
      <ClassName>Godot.SR</ClassName>
      <EmitFormatMethods>true</EmitFormatMethods>
    </EmbeddedResource>
  </ItemGroup>

</Project>
